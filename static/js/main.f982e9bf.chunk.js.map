{"version":3,"sources":["common/constant.ts","component/Navbar/Navbar.tsx","component/DataTable/DataTable.tsx","common/hooks/useAppDispatch.ts","component/Transaction/transactionSlice.ts","component/Transaction/Transaction.tsx","component/Block/blockSlice.ts","common/hooks/useLoadBlocks.tsx","common/hooks/useProvider.tsx","component/Block/Block.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["ENV","ACTION","COLUMN_TYPE","useStyles","makeStyles","theme","createStyles","root","flexGrow","overflow","grow","list","display","flexDirection","padding","color","palette","primary","dark","fontWeight","backgroundColor","common","white","breakpoints","down","link","width","spacing","icon","fade","header","Navbar","classes","className","AppBar","position","Toolbar","Typography","variant","List","ListItem","button","component","NavLink","to","exact","activeClassName","ListItemIcon","ListItemText","BLOCK_FIELD","FIELD_NAME","DISPLAY_NAME","TRANSACTION_FIELD","CustomToolbar","CustomLoadingOverlay","style","top","LinearProgress","addToolTip","data","Tooltip","title","value","placement","withWidth","props","columns","map","column","align","headerAlign","renderCell","type","NUMBER","undefined","flex","isWidthUp","rows","row","pageSize","options","noOfRecordsPerPage","loading","hideFooterPagination","disablePagination","disableColumnMenu","disableFilter","components","customFilter","LoadingOverlay","Footer","note","withPagination","Grid","container","item","xs","sm","CustomFooter","onCellDoubleClick","a","colDef","copyToClipBoard","navigator","clipboard","writeText","useAppDispatch","useDispatch","useAppSelector","useSelector","provider","ethers","providers","getDefaultProvider","Web3Provider","window","ethereum","e","fetchTransactionAsync","createAsyncThunk","TRANSACTION_FETCH","id","txs","getBlockNumber","getBlockWithTransactions","txList","transactions","forEach","transaction","push","transactionIndex","timestamp","gasPrice","toNumber","gasLimit","toHexString","transactionSlice","createSlice","name","initialState","reducers","deleteTransactions","state","extraReducers","builder","addCase","fulfilled","action","payload","actions","maxWidth","maxHeight","card","height","alignItems","breadCrumbs","margin","field","headerName","STRING","date","Date","filterable","valueGetter","parseInt","Transaction","useState","setLoading","useParams","dispatch","useEffect","Number","setTimeout","justify","Breadcrumbs","aria-label","Link","blockNumber","Card","filter","join","fetchBlockAsync","BLOCK_FETCH","getBlock","block","number","gasUsed","noOfTransactions","length","fetchPreviousBlocksAsync","BLOCK_FETCH_PREVIOUS","noOfBlocks","previousBlocks","currentBlock","i","blockSlice","blocks","deleteBlocks","sort","data1","data2","useLoadBlocks","setProvider","console","error","React","useLoadProvider","appInitialized","setAppInitialized","numberOfBlocks","store","on","off","textDecoration","BorderLinearProgress","withStyles","borderRadius","marginTop","colorPrimary","grey","bar","main","StyledBadge","badge","background","border","Badge","LINK","description","IconButton","badgeContent","max","sortable","progress","getValue","toFixed","replace","split","Block","slice","createMuiTheme","secondary","default","typography","fontSize","App","alert","setAlert","ThemeProvider","CssBaseline","Alert","severity","onClose","path","render","configureStore","reducer","blockReducer","transactionReducer","devTools","process","PRODUCTION","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f982e9bf.chunk.js","sourcesContent":["export enum ENV {\n  PRODUCTION = 'production',\n}\n\nexport enum ACTION {\n  BLOCK_FETCH_PREVIOUS = 'block/fetchPreviousBlocks',\n  BLOCK_FETCH = 'block/fetchBlock',\n  TRANSACTION_FETCH = 'transaction/fetchTransaction',\n}\n\nexport enum COLUMN_TYPE {\n  STRING = 'string',\n  NUMBER = 'number',\n  LINK = 'link',\n}\n\nexport const BLOCK_FIELD = {\n  NUMBER: {\n    FIELD_NAME: 'number',\n    DISPLAY_NAME: 'Block',\n  },\n  TIMESTAMP: {\n    FIELD_NAME: 'timestamp',\n    DISPLAY_NAME: 'Age',\n  },\n  NO_OF_TRANSACTION: {\n    FIELD_NAME: 'noOfTransactions',\n    DISPLAY_NAME: 'Number Of Txn',\n  },\n  MINER: {\n    FIELD_NAME: 'miner',\n    DISPLAY_NAME: 'Miner',\n  },\n  GAS_USED: {\n    FIELD_NAME: 'gasUsed',\n    DISPLAY_NAME: 'Gas Used',\n  },\n  GAS_LIMIT: {\n    FIELD_NAME: 'gasLimit',\n    DISPLAY_NAME: 'Gas Limit',\n  },\n};\n\nexport const TRANSACTION_FIELD = {\n  HASH: {\n    FIELD_NAME: 'hash',\n    DISPLAY_NAME: 'Txn Hash',\n  },\n  TIMESTAMP: {\n    FIELD_NAME: 'timestamp',\n    DISPLAY_NAME: 'Age',\n  },\n  FROM: {\n    FIELD_NAME: 'from',\n    DISPLAY_NAME: 'From',\n  },\n  TO: {\n    FIELD_NAME: 'to',\n    DISPLAY_NAME: 'To',\n  },\n  VALUE: {\n    FIELD_NAME: 'value',\n    DISPLAY_NAME: 'Amount(In Ether)',\n  },\n  CONFIRMED: {\n    FIELD_NAME: 'confirmations',\n    DISPLAY_NAME: 'Blocks Confirmed',\n  },\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  createStyles,\n  fade,\n  makeStyles,\n  Theme,\n} from '@material-ui/core/styles';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { List, ListItemText, ListItem } from '@material-ui/core';\nimport WidgetsIcon from '@material-ui/icons/Widgets';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      overflow: 'hidden',\n    },\n    grow: {\n      flexGrow: 0.9,\n    },\n    list: {\n      display: 'flex',\n      flexDirection: 'row',\n      padding: 0,\n      '& .Mui-selected,& .Mui-selected:hover': {\n        '& .MuiSvgIcon-root,& .MuiTypography-root': {\n          color: theme.palette.primary.dark,\n          fontWeight: 'bold',\n        },\n        backgroundColor: theme.palette.common.white,\n      },\n      [theme.breakpoints.down(780)]: {\n        flexDirection: 'column',\n      },\n    },\n    link: {\n      width: '100%',\n      [theme.breakpoints.down(780)]: {\n        width: '90%',\n      },\n      margin: theme.spacing(1),\n    },\n    icon: {\n      color: fade(theme.palette.common.white, 0.85),\n    },\n    header: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  })\n);\n\nconst Navbar = (): JSX.Element => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' className={classes.header}>\n        <Toolbar>\n          <Typography variant='h6'>\n            <List className={classes.list}>\n              <ListItem\n                button\n                component={NavLink}\n                to='/'\n                className={classes.link}\n                exact\n              >\n                Block Explore\n              </ListItem>\n            </List>\n          </Typography>\n          <div className={classes.grow} />\n          <List className={classes.list}>\n            <ListItem\n              button\n              component={NavLink}\n              to='/block'\n              className={classes.link}\n              activeClassName='Mui-selected'\n              exact\n            >\n              <ListItemIcon>\n                <WidgetsIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText primary={'Blocks'} />\n            </ListItem>\n            <ListItem\n              button\n              component={NavLink}\n              to='/txn'\n              className={classes.link}\n              activeClassName='Mui-selected'\n            >\n              <ListItemIcon>\n                <SendIcon className={classes.icon} />\n              </ListItemIcon>\n              <ListItemText primary={'Transactions'} />\n            </ListItem>\n          </List>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport {\n  GridOverlay,\n  DataGrid,\n  GridToolbarContainer,\n  GridToolbarExport,\n  GridToolbarFilterButton,\n  GridCellParams,\n  GridPagination,\n} from '@material-ui/data-grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { isWidthUp, Tooltip, withWidth } from '@material-ui/core';\nimport { COLUMN_TYPE } from '../../common/constant';\nimport { defaultProps } from './dataTable.type';\nimport Grid from '@material-ui/core/Grid';\n\n/**\n * Creating custom toolbar\n * @returns Toolbar\n */\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarFilterButton />\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\n/**\n * Custom Loading bar\n * @returns Loading Overlay\n */\nfunction CustomLoadingOverlay() {\n  return (\n    <GridOverlay>\n      <div style={{ position: 'absolute', top: 0, width: '100%' }}>\n        <LinearProgress />\n      </div>\n    </GridOverlay>\n  );\n}\n\nfunction CustomFooter(data: string, withPagination = false) {\n  return (\n    <>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <h3>{data}</h3>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          {withPagination && <GridPagination />}\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n/**\n * Add custom tooltip for all cells\n * @param data GridCellParams\n * @returns JSX element\n */\nfunction addToolTip(data: GridCellParams) {\n  return (\n    <Tooltip title={data.value as string} placement='top'>\n      <div className='MuiDataGrid-cell'>{data.value}</div>\n    </Tooltip>\n  );\n}\n\nfunction DataTable(props: defaultProps): JSX.Element {\n  return (\n    <DataGrid\n      columns={props.columns.map((column) => {\n        return {\n          ...column,\n          align: 'center',\n          headerAlign: 'center',\n          renderCell:\n            column.type !== COLUMN_TYPE.NUMBER\n              ? column.renderCell\n                ? column.renderCell\n                : addToolTip\n              : undefined,\n          flex: isWidthUp('sm', props.width) ? 0.1 : undefined,\n        };\n      })}\n      rows={props.row}\n      pageSize={\n        props.options.noOfRecordsPerPage ? props.options.noOfRecordsPerPage : 10\n      }\n      loading={props.options?.loading}\n      hideFooterPagination={props.options?.disablePagination}\n      disableColumnMenu={props.options?.disableFilter}\n      components={{\n        Toolbar: props.options?.customFilter ? CustomToolbar : undefined,\n        LoadingOverlay: CustomLoadingOverlay,\n        Footer: props.note\n          ? () =>\n              CustomFooter(\n                props.note as string,\n                !props.options?.disablePagination\n              )\n          : undefined,\n      }}\n      onCellDoubleClick={(a) =>\n        (a.colDef as any).copyToClipBoard\n          ? navigator.clipboard.writeText(a.value as string)\n          : undefined\n      }\n    />\n  );\n}\n\nexport default withWidth()(DataTable);\n","import { AppDispatch, RootState } from '../../redux/store';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { ACTION } from './../../common/constant';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\nimport {\n  SerializeTransactionResponse,\n  TransactionState,\n} from './transaction.types';\n\nlet provider = ethers.providers.getDefaultProvider();\n\ntry {\n  provider = new ethers.providers.Web3Provider(\n    (window as { [key: string]: any }).ethereum\n  );\n} catch (e) {\n  // error\n}\n\nconst initialState: TransactionState = {\n  transactions: [],\n};\n\n/**\n * Fetching transaction data async\n */\nexport const fetchTransactionAsync = createAsyncThunk(\n  ACTION.TRANSACTION_FETCH,\n  async (id?: number) => {\n    const txs: Array<SerializeTransactionResponse> = [];\n    try {\n      // if no id provided it will fetch transaction for latest block\n      if (!id) id = await provider.getBlockNumber();\n      const txList = await provider.getBlockWithTransactions(id);\n      txList.transactions.forEach((transaction) => {\n        txs.push({\n          ...transaction,\n          //transactionIndex is not present in its type class\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          id: (transaction as any).transactionIndex,\n          timestamp: txList.timestamp,\n          gasPrice: transaction.gasPrice?.toNumber() as number, \n          gasLimit: transaction.gasLimit.toNumber(),\n          value: transaction.value.toHexString(),\n        });\n      });\n    } catch (e) {\n      //error\n    }\n    return txs;\n  }\n);\n\n/**\n * Create slice for transaction\n */\nexport const transactionSlice = createSlice({\n  name: 'block',\n  initialState,\n  reducers: {\n    deleteTransactions: (state) => {\n      state.transactions = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchTransactionAsync.fulfilled, (state, action) => {\n      state.transactions = action.payload;\n    });\n  },\n});\n\nexport const { deleteTransactions } = transactionSlice.actions;\n\nexport default transactionSlice.reducer;\n","import React, { useEffect, useState } from 'react';\nimport DataTable from '../DataTable/DataTable';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { Grid } from '@material-ui/core';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../common/hooks/useAppDispatch';\nimport { useParams } from 'react-router-dom';\nimport { deleteTransactions, fetchTransactionAsync } from './transactionSlice';\nimport TimeAgo from 'react-timeago';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { COLUMN_TYPE, TRANSACTION_FIELD } from '../../common/constant';\nimport { CustomGridColDef } from '../DataTable/dataTable.type';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    card: {\n      height: '70vh',\n      width: '95%',\n      display: 'flex',\n      alignItems: 'center',\n      [theme.breakpoints.down(780)]: {\n        height: '90vh',\n        width: '90%',\n      },\n    },\n    breadCrumbs: {\n      margin: theme.spacing(4, 4, 4, 4),\n      width: '95%',\n      [theme.breakpoints.down(780)]: {\n        margin: theme.spacing(1, 2, 2, 2),\n        width: '90%',\n      },\n    },\n  })\n);\n\nconst columns: CustomGridColDef[] = [\n  {\n    field: TRANSACTION_FIELD.HASH.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.HASH.DISPLAY_NAME,\n    type: COLUMN_TYPE.STRING,\n    copyToClipBoard: true,\n    width: 400,\n  },\n  {\n    field: TRANSACTION_FIELD.TIMESTAMP.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.TIMESTAMP.DISPLAY_NAME,\n    renderCell: function getAge(data) {\n      return <TimeAgo date={`${new Date((data.value as number) * 1000)}`} />;\n    },\n    width: 150,\n    filterable: false,\n  },\n  {\n    field: TRANSACTION_FIELD.FROM.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.FROM.DISPLAY_NAME,\n    copyToClipBoard: true,\n    flex: 0.1,\n  },\n  {\n    field: TRANSACTION_FIELD.TO.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.TO.DISPLAY_NAME,\n    copyToClipBoard: true,\n    flex: 0.1,\n  },\n  {\n    field: TRANSACTION_FIELD.VALUE.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.VALUE.DISPLAY_NAME,\n    type: COLUMN_TYPE.NUMBER,\n    copyToClipBoard: true,\n    valueGetter: (data) => {\n      return parseInt(data.value as string, 16) / 1000000000000000000;\n    },\n    width: 200,\n  },\n  {\n    field: TRANSACTION_FIELD.CONFIRMED.FIELD_NAME,\n    headerName: TRANSACTION_FIELD.CONFIRMED.DISPLAY_NAME,\n    type: COLUMN_TYPE.NUMBER,\n    width: 200,\n  },\n];\n\nfunction Transaction(): JSX.Element {\n  const [loading, setLoading] = useState(true);\n\n  const data = useParams<{ id: string }>();\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    //loading transactions for given block\n    dispatch(fetchTransactionAsync(Number(data.id)));\n    // after 1 sec setting loader off\n    setTimeout(() => setLoading(false), 1000);\n    return () => {\n      // on clean up deleting all transactions\n      dispatch(deleteTransactions());\n    };\n  }, [data.id]);\n\n  const classes = useStyles();\n\n  const transactions = useAppSelector(\n    (state) => state.transaction.transactions\n  );\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      alignItems='center'\n      justify='center'\n    >\n      <Breadcrumbs aria-label='breadcrumb' className={classes.breadCrumbs}>\n        <Link color='inherit'>Transactions</Link>\n        <Typography color='textPrimary'>\n          Block : {data.id ? data.id : transactions[0]?.blockNumber}\n        </Typography>\n      </Breadcrumbs>\n\n      <Card className={classes.card}>\n        <div style={{ height: '100%', width: '100%' }}>\n          <div style={{ display: 'flex', height: '100%' }}>\n            <DataTable\n              row={transactions}\n              columns={columns}\n              options={{\n                disableFilter: true,\n                customFilter: true,\n                loading: loading,\n              }}\n              note={`Note: Double click on ${columns\n                .map((column) => {\n                  if (column.copyToClipBoard) return column.headerName;\n                })\n                .filter((e) => {\n                  return e != null;\n                })\n                .join(',')} will copy content to clipboard`}\n            />\n          </div>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n\nexport default Transaction;\n","import { Block } from '@ethersproject/providers';\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { ethers } from 'ethers';\nimport { ACTION } from '../../common/constant';\nimport { BlockState, SerializeBlock } from './block.types';\n\nlet provider = ethers.providers.getDefaultProvider();\n\ntry {\n  provider = new ethers.providers.Web3Provider(\n    (window as { [key: string]: any }).ethereum\n  );\n} catch (e) {\n  // error\n}\n\nconst initialState: BlockState = {\n  blocks: [],\n};\n\n/**\n * Fetch block data async\n */\nexport const fetchBlockAsync = createAsyncThunk(\n  ACTION.BLOCK_FETCH,\n  async (id: string) => {\n    const block: Block = await provider.getBlock(id);\n    const data: SerializeBlock = {\n      ...block,\n      id: block.number,\n      gasLimit: block.gasLimit.toNumber(),\n      gasUsed: block.gasUsed.toNumber(),\n      noOfTransactions: block.transactions.length,\n    };\n    return data;\n  }\n);\n\n/**\n * Fetch previous 15 blocks data\n */\nexport const fetchPreviousBlocksAsync = createAsyncThunk(\n  ACTION.BLOCK_FETCH_PREVIOUS,\n  async (noOfBlocks: number) => {\n    try {\n      const previousBlocks: SerializeBlock[] = [];\n      // fetching current block number\n      const currentBlock = await provider.getBlockNumber();\n      for (let i = currentBlock - noOfBlocks - 1; i < currentBlock; i++) {\n        const block = await provider.getBlock(i);\n        previousBlocks.push({\n          ...block,\n          id: block.number,\n          gasLimit: block.gasLimit.toNumber(),\n          gasUsed: block.gasUsed.toNumber(),\n          noOfTransactions: block.transactions.length,\n        });\n      }\n      return previousBlocks;\n    } catch (e) {\n      // error\n    }\n    return [];\n  }\n);\n\n/**\n * Create block slice\n */\nexport const blockSlice = createSlice({\n  name: 'block',\n  initialState,\n  reducers: {\n    deleteBlocks: (state) => {\n      state.blocks = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchBlockAsync.fulfilled, (state, action) => {\n        state.blocks.push(action.payload);\n        if (state.blocks.length > 10) {\n          state.blocks = state.blocks.filter(\n            (block) => block.number > action.payload.number - 15\n          );\n        }\n        state.blocks.sort((data1, data2) => data2.number - data1.number);\n      })\n      .addCase(fetchPreviousBlocksAsync.fulfilled, (state, action) => {\n        state.blocks = action.payload.sort(\n          (data1, data2) => data2.number - data1.number\n        );\n      });\n  },\n});\n\nexport const { deleteBlocks } = blockSlice.actions;\n\nexport default blockSlice.reducer;\n","import { useEffect, useState } from 'react';\nimport {\n  deleteBlocks,\n  fetchBlockAsync,\n  fetchPreviousBlocksAsync,\n} from '../../component/Block/blockSlice';\nimport { useAppDispatch, useAppSelector } from './useAppDispatch';\nimport useLoadProvider from './useProvider';\n\n/**\n * Load Previous Blocks and establish listener for new events\n * @returns void\n */\nexport default function useLoadBlocks(): void {\n  const dispatch = useAppDispatch();\n  const provider = useLoadProvider();\n  const [appInitialized, setAppInitialized] = useState(false as boolean);\n  const numberOfBlocks = useAppSelector((store) => store.block.blocks.length);\n\n  // once app initialized after that on every provider change it will\n  // register and deregister listener\n  useEffect(() => {\n    appInitialized &&\n      provider?.on('block', (data) => {\n        dispatch(fetchBlockAsync(data));\n      });\n    return () => {\n      // removing listener on cleanup also cleaning up store\n      appInitialized && dispatch(deleteBlocks());\n      provider?.off('block');\n    };\n  }, [provider, appInitialized]);\n\n  // on load it will load previous 15 blocks\n  useEffect(() => {\n    dispatch(fetchPreviousBlocksAsync(15));\n  }, []);\n\n  // on initial 15 blocks are loaded it will trigger state\n  useEffect(() => {\n    if (!appInitialized && numberOfBlocks > 15) {\n      setAppInitialized(true);\n    }\n  }, [numberOfBlocks]);\n}\n","import { ethers } from 'ethers';\nimport React, { useState } from 'react';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { ICustomWindow } from '../types';\n\nexport default function useLoadProvider(): Web3Provider | undefined {\n  const [provider, setProvider] = useState(null as any);\n\n  if (typeof (window as ICustomWindow).ethereum === 'undefined') {\n    console.error('no metamask found');\n  }\n\n  React.useEffect(() => {\n    // adding provider to local store\n    if ((window as ICustomWindow).ethereum)\n      setProvider(\n        new ethers.providers.Web3Provider((window as ICustomWindow).ethereum)\n      );\n  }, [(window as ICustomWindow).ethereum]);\n\n  return provider;\n}\n","import React from 'react';\nimport DataTable from '../DataTable/DataTable';\nimport {\n  makeStyles,\n  createStyles,\n  Theme,\n  fade,\n} from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport useLoadBlocks from '../../common/hooks/useLoadBlocks';\nimport TimeAgo from 'react-timeago';\nimport { Link } from 'react-router-dom';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport BreadcrumbLink from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { useAppSelector } from '../../common/hooks/useAppDispatch';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { BLOCK_FIELD, COLUMN_TYPE } from '../../common/constant';\nimport { CustomGridColDef } from '../DataTable/dataTable.type';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: '100%',\n      maxHeight: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    card: {\n      height: '70vh',\n      width: '95%',\n      display: 'flex',\n      alignItems: 'center',\n      [theme.breakpoints.down(780)]: {\n        height: '90vh',\n        width: '90%',\n      },\n    },\n    link: {\n      textDecoration: 'none',\n    },\n    breadCrumbs: {\n      margin: theme.spacing(4, 4, 4, 4),\n      width: '95%',\n      [theme.breakpoints.down(780)]: {\n        margin: theme.spacing(1, 2, 2, 2),\n        width: '90%',\n      },\n    },\n  })\n);\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 5,\n      display: 'block',\n      width: '100%',\n      borderRadius: 5,\n      marginTop: -12,\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: fade(theme.palette.primary.main, 0.85),\n    },\n  })\n)(LinearProgress);\n\nconst StyledBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      background: fade(theme.palette.primary.main, 0.85),\n      border: `2px solid ${fade(theme.palette.primary.main, 0.8)}`,\n      padding: '15px 20px',\n    },\n  })\n)(Badge);\n\nconst columns: CustomGridColDef[] = [\n  {\n    field: BLOCK_FIELD.NUMBER.FIELD_NAME,\n    headerName: BLOCK_FIELD.NUMBER.DISPLAY_NAME,\n    copyToClipBoard: true,\n    width: 200,\n  },\n  {\n    field: BLOCK_FIELD.TIMESTAMP.FIELD_NAME,\n    headerName: BLOCK_FIELD.TIMESTAMP.DISPLAY_NAME,\n    renderCell: function getAge(data) {\n      return <TimeAgo date={`${new Date((data.value as number) * 1000)}`} />;\n    },\n    width: 150,\n  },\n  {\n    field: BLOCK_FIELD.NO_OF_TRANSACTION.FIELD_NAME,\n    headerName: BLOCK_FIELD.NO_OF_TRANSACTION.DISPLAY_NAME,\n    type: COLUMN_TYPE.LINK,\n    description: 'Click Me! To view transaction detail',\n    renderCell: function getAge(data) {\n      return (\n        <Link to={`/txn/${data.row.id}`}>\n          <IconButton aria-label='cart'>\n            <StyledBadge\n              badgeContent={data.value ? data.value : '0'}\n              color={'primary'}\n              max={99999}\n            ></StyledBadge>\n          </IconButton>\n        </Link>\n      );\n    },\n    width: 200,\n  },\n  {\n    field: BLOCK_FIELD.MINER.FIELD_NAME,\n    headerName: BLOCK_FIELD.MINER.DISPLAY_NAME,\n    sortable: false,\n    copyToClipBoard: true,\n    flex: 0.1,\n  },\n  {\n    field: BLOCK_FIELD.GAS_USED.FIELD_NAME,\n    renderCell: function loadProgress(data) {\n      const progress = (\n        ((data.value as number) /\n          (data.getValue(data.id, 'gasLimit') as number)) *\n        100\n      )?.toFixed(2);\n      return (\n        <span>\n          <span>{`${\n            Number(data.value)\n              .toFixed(1)\n              .replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n              .split('.')[0]\n          } (${progress}%)`}</span>\n          <BorderLinearProgress variant='determinate' value={Number(progress)}>\n            {data.value}\n          </BorderLinearProgress>\n        </span>\n      );\n    },\n    headerName: BLOCK_FIELD.GAS_USED.DISPLAY_NAME,\n    type: COLUMN_TYPE.STRING,\n    width: 200,\n  },\n  {\n    field: BLOCK_FIELD.GAS_LIMIT.FIELD_NAME,\n    headerName: BLOCK_FIELD.GAS_LIMIT.DISPLAY_NAME,\n    type: COLUMN_TYPE.NUMBER,\n    width: 200,\n  },\n];\n\nexport default function Block(): JSX.Element {\n  useLoadBlocks();\n\n  const classes = useStyles();\n  let blocks = useAppSelector((state) => state.block.blocks);\n  blocks = blocks?.slice(0, 10);\n  return (\n    <Grid\n      container\n      className={classes.root}\n      alignItems='center'\n      justify='center'\n    >\n      <Breadcrumbs aria-label='breadcrumb' className={classes.breadCrumbs}>\n        <BreadcrumbLink color='inherit'>Blocks</BreadcrumbLink>\n        <Typography color='textPrimary'>\n          Current Block : {blocks[0]?.id}\n        </Typography>\n      </Breadcrumbs>\n\n      <Card className={classes.card}>\n        <div style={{ height: '100%', width: '100%' }}>\n          <div style={{ display: 'flex', height: '100%' }}>\n            <DataTable\n              row={blocks}\n              columns={columns}\n              options={{\n                disableFilter: true,\n                disablePagination: true,\n                loading: blocks.length < 9,\n              }}\n              note={`Note: Double click on ${columns\n                .map((column) => {\n                  if (column.copyToClipBoard) return column.headerName;\n                })\n                .filter((e) => {\n                  return e != null;\n                })\n                .join(',')} will copy content to clipboard`}\n            />\n          </div>\n        </div>\n      </Card>\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport Navbar from './component/Navbar/Navbar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Transaction from './component/Transaction/Transaction';\nimport Block from './component/Block/Block';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ICustomWindow } from './common/types';\nimport Alert from '@mui/lab/Alert';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1a237e',\n    },\n    secondary: {\n      main: '#1976d2',\n    },\n    background: {\n      default: '#f7f7f7',\n    },\n  },\n  typography: {\n    fontSize: 16,\n  },\n});\n\nfunction App(): JSX.Element {\n  const [alert, setAlert] = useState(false);\n\n  useEffect(() => {\n    if (!(window as ICustomWindow).ethereum) setAlert(true);\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Navbar></Navbar>\n        {alert && (\n          <Alert\n            variant='filled'\n            severity='error'\n            onClose={() => {\n              return;\n            }}\n          >\n            No meta mask found! Please install and refresh the page!!!\n          </Alert>\n        )}\n        {!alert && (\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/block' />} />\n            <Route exact path='/block'>\n              <Block />\n            </Route>\n            <Route path='/txn/:id?'>\n              <Transaction />\n            </Route>\n          </Switch>\n        )}\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { ENV } from '../common/constant';\nimport blockReducer from '../component/Block/blockSlice';\nimport transactionReducer from '../component/Transaction/transactionSlice';\n\nexport const store = configureStore({\n  reducer: {\n    block: blockReducer,\n    transaction: transactionReducer,\n  },\n  devTools: process.env.NODE_ENV !== ENV.PRODUCTION,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}